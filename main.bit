/*
    main.bit -- Main Bit File for the Embedthis Security Transport
 */

Bit.load({
    blend: [
        "${BITS}/embedthis.bit",
    ],
    settings: {
		product: 'est',
		title: 'Embedthis TLS Library',
        company: 'Embedthis',
		version: '0.1.0',
		buildNumber: '0',
        sync: [],
    },

    usage: {
        assert: 'Enable program assertions',
    },

    defaults: {
        '+defines': [ '-D_FILE_OFFSET_BITS=64' ]
    },

    targets: {
        libest: {
            type: 'lib',
            headers: [ 'src/*.h' ],
            sources: [ 'src/*.c' ],
            '-compiler': [
                '-Wall',
                '-Wshorten-64-to-32',
            ],
        },

        package: {
            depends: ['build'],
            action: "
                let d = bit.dir.pkg.join('${settings.product}-${settings.version}')
                safeRemove(bit.dir.pkg)
                install('package/est.bit', d.join('src/deps/est/est.bit'), {hidden: true})
                install([ 'src/est.h', 'src/bignum.h', 'src/net.h', 'src/dhm.h', 'src/rsa.h', 'src/md5.h', 'src/sha1.h', 
                        'src/x509.h', 'src/ssl.h', 'src/aes.h', 'src/arc4.h', 'src/base64.h', 'src/bn_mul.h', 
                        'src/camellia.h', 'src/certs.h', 'src/debug.h', 'src/des.h', 'src/havege.h', 
                        'src/md2.h', 'src/md4.h', 'src/padlock.h', 'src/sha2.h', 'src/sha4.h', 'src/timing.h', 
                        'src/xtea.h'], d.join('src/deps/est/est.h'), {
                    cat: true,
                    filter: /^#include.*\"/mg,
                    header: '#include \"bit.h\"\n',
                    title: bit.settings.title + ' Library Source',
                })

                install(['src/*.c'], 
                    d.join('src/deps/est/estLib.c'), {
                    cat: true,
                    filter: /^#inc.*est.*$|#inc.*config.h.*$|#inc.*ucp.*.h.*$/mg,
                    header: '#include \"est.h\"',
                    title: bit.settings.title + ' Library Source',
                })
                package(bit.dir.pkg, ['combo', 'flat'])
            ",
        },
	},
})
