/*
    main.bit -- Main Bit File for the Embedded Security Transport

    This file contains the rules for targets to build and default settings for configuration.
    The Bit utility (http://ejscript.org) may be used to build Est instead of make. Bit provides
    for configured builds and generates projects files.

    Alternatively, build using the "make" utility in which case this file is not used.
 */

Bit.load({
    blend: [
        "${BITS}/embedthis.bit",
        "doc/doc.bit",
    ],

    '+modules': [
        'bits/est.es',
    ],

    settings: {
		product: 'est',
		title: 'Embedded Security Transport',
        company: 'Embedthis',
		version: '0.6.0',
		buildNumber: '0',
        bit: '0.8.5',

        /*
            Installation prefix set
         */
        prefixes: 'embedthis-prefixes',

        sync: [ 'bitos' ],
        packs: [ 'bits/packs' ]

        /*
            Optional packs to automatically discover and configure
         */
        '+discover': [ 'doxygen', 'dsi', 'man', 'man2html', 'pmaker', 'utest', 'zip' ],
        '+required': [ 'compiler' ],

        /*
            Packs to disable when using --without all
         */
        'without-all': ['doxygen', 'dsi', 'man', 'man2html', 'pmaker' ],

        /*
            Packs to disable when using --without default (generating packages)
         */
        'without-default': ['doxygen', 'dsi', 'man', 'man2html', 'pmaker' ],

        est: {
            /*
                AES is required for the ciphers:
                    TLS_RSA_WITH_AES_128_CBC_SHA
                    TLS_RSA_WITH_AES_256_CBC_SHA
                    TLS_DHE_RSA_WITH_AES_256_CBC_SHA  
             */
            aes: true,

            /* Base64 encoding/decoding */
            base64: true,

            /* Arbitrary precision math */
            bignum: true,

            /*
                ARC4 is required for the ciphers:
                    TLS_RSA_WITH_RC4_128_MD5
                    TLS_RSA_WITH_RC4_128_SHA
            */
            rc4: true,

            /* 
                Camellia is required for the ciphers:
                    TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
                    TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
                    TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
              */
            camellia: false,

            /* 
                Des is required for the ciphers:
                    TLS_RSA_WITH_3DES_EDE_CBC_SHA
                    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
             */
            des: false,

            /*
                DHM is required for the ciphers: 
                    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
                    TLS_DHE_RSA_WITH_AES_256_CBC_SHA
             */
            dhm: true,

            genPrime: true,

            /* Enable the HAVEGE random generator */
            havege: true,

            /* Enable debug logging */
            logging: true,

            /* Enable rare) MD2-signed X.509 certs */
            md2: false,

            /*  Enable (rare) MD4-signed X.509 certs */
            md4: false,

            /*  MOB */
            md5: false,

            /* Network I/O interface layer */
            net: true,

            /* Via Padlock H/W acceleration */
            padlock: true,

            /* MOB */
            romTables: true,

            /*
                Enable RSA ciphers. Required for SSL/TLS and MD5-signed certs.
             */
            rsa: true,

            /*
                Enable SHA1. Required for SSL/TLS and SHA1-signed certs
             */
            sha1: true,

            /*
                Enable SHA2. Required for SHA-224 and SHA-256
             */
            sha2: true,

            /*
                Enable SHA4. Required for SHA-384 and SHA-512
             */
            sha4: true,

            sslClient: true,
            sslServer: true,
            testCerts: true,

            /*
                Enable parsing X509 certificates
             */
            x509: true,

            /* Enable the XTEA algorithm */
            xtea: true,
        }
    },

    usage: {
        'est.aes':          'Enable AES cipher (true|false)',
        'est.base64':       'Enable arbitrary precision math (true|false)',
        'est.rc4':          'Enable the ARC4 cipher (true|false)',
        'est.camellia':     'Enable the Camellia cipher (true|false)',
        'est.des':          'Enable the 3DES cipher (true|false)',
        'est.dhm':          'Enable the DHM (true|false)',
        'est.genPrime':     'Enable generation of primes (true|false)',
        'est.havege':       'Enable HAVEGE random generator (true|false)',
        'est.logging':      'Enable trace logging (true|false)',
        'est.md2':          'Enable MD2 (true|false)',
        'est.md4':          'Enable MD4 (true|false)',
        'est.md5':          'Enable MD5  (true|false)',
        'est.net':          'Enable network I/O layer (true|false)',
        'est.padlock':      'Enable VIA Padlock acceleration (true|false)',
        'est.romTables':    'Enable ROM tables (true|false)',
        'est.rsa':          'Enable RSA cipher (true|false)',
        'est.sha1':         'Enable SHA1 (true|false)',
        'est.sha2':         'Enable SHA2 (true|false)',
        'est.sha4':         'Enable SHA4 (true|false)',
        'est.sslClient':    'Enable SSL/TLS client side (true|false)',
        'est.sslServer':    'Enable SSL/TLS server side (true|false)',
        'est.testCerts':    'Enable generation of test certificates (true|false)',
        'est.x509':         'Enable X509 certificate support (true|false)',
        'est.xtea':         'Enable XTEA (true|false)',
    },

    customize: [
        /* 
            The optional custom.bit file is loaded after main.bit is fully processed. It can
            thus override any setting. Feel free to create and customize. 
         */
        'custom.bit',
    ],

    targets: {
        libest: {
            type: 'lib',
            headers: [ 'src/*.h' ],
            sources: [ 'src/*.c' ],
            '-compiler': [
                '-Wall',
                '-Wshorten-64-to-32',
            ],
        },

        _package: {
            depends: ['build'],
            action: "
                let d = bit.dir.pkg.join('${settings.product}-${settings.version}')
                safeRemove(bit.dir.pkg)
                install('package/est.bit', d.join('src/deps/est/est.bit'), {hidden: true})

                package(bit.dir.pkg, ['combo', 'flat'])
            ",
        },
    },
    manifest: {
        packages: {
            combo: {
                inherit:    'embedthis-manifest',
                prefixes:   [ 'src'],
                sets:       [ 'source' ],
            },
        },
        files: [ 
            {   from:   'package/est.bit', 
                to:     '${src}/src/deps/est/est.bit',
                set:    'source',
            },{
                from:   [ 
                        'src/est.h', 'src/bignum.h', 'src/net.h', 'src/dhm.h', 'src/rsa.h', 'src/md5.h', 'src/sha1.h', 
                        'src/x509.h', 'src/ssl.h', 'src/aes.h', 'src/arc4.h', 'src/base64.h', 'src/bn_mul.h', 
                        'src/camellia.h', 'src/certs.h', 'src/debug.h', 'src/des.h', 'src/havege.h', 
                        'src/md2.h', 'src/md4.h', 'src/padlock.h', 'src/sha2.h', 'src/sha4.h', 'src/timing.h', 
                        'src/xtea.h'
                ],
                to:     '${src}/src/deps/est/est.h',
                cat:    true,
                filter: /^#include.*\"/mg,
                header: '#include \"bit.h\"\n\n#if BIT_PACK_EST\n\n#include \"bitos.h\"\n',
                footer: '#endif /* BIT_PACK_EST */'
                title:  '${settings.title} Library Header',
                set:    'source',
            },{
                from:   'src/*.c', 
                to:     '${src}/src/deps/est/estLib.c',
                cat:    true,
                filter: /^#inc.*est.*$|#inc.*config.h.*$|#inc.*ucp.*.h.*$/mg,
                header: '#include \"est.h\"\n\n#if BIT_PACK_EST',
                footer: '#endif /* BIT_PACK_EST */'
                title:  '${settings.title} Library Source',
                set:    'source',
            },{
                from:   'crt/ca.crt',
                to:     '${src}/src/deps/est/ca.crt',
                set:    'source',
            },
        ],
	},
})
