#
#   est-windows-default.nmake -- Makefile to build Embedthis Security Transport for windows
#

PRODUCT         = est
VERSION         = 0.6.0
BUILD_NUMBER    = 0
PROFILE         = default
PA              = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH            = x64
ENTRY           = _DllMainCRTStartup
!ELSE
ARCH            = x86
ENTRY           = _DllMainCRTStartup@12
!ENDIF

OS              = windows
CONFIG          = $(OS)-$(ARCH)-$(PROFILE)
LBIN            = $(CONFIG)\bin
CC              = cl
LD              = link
RC              = rc
CFLAGS          = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS          = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS          = -I$(CONFIG)\inc
LDFLAGS         = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS        = -libpath:$(CONFIG)\bin
LIBS            = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX       = C:
BIT_BASE_PREFIX       = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX        = $(BIT_BASE_PREFIX)\Embedthis Security Transport
BIT_VAPP_PREFIX       = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX       = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX      = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX        = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX        = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX        = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX        = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX        = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX        = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX        = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX      = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX      = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX        = $(BIT_VAPP_PREFIX)\src

all compile: prep \
        $(CONFIG)\bin\removeFiles.exe \
        $(CONFIG)\bin\libest.dll

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\est-windows-default-bit.h $(CONFIG)\inc\bit.h
clean:
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\bin\libest.dll del /Q $(CONFIG)\bin\libest.dll
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj
	-if exist $(CONFIG)\obj\aes.obj del /Q $(CONFIG)\obj\aes.obj
	-if exist $(CONFIG)\obj\arc4.obj del /Q $(CONFIG)\obj\arc4.obj
	-if exist $(CONFIG)\obj\base64.obj del /Q $(CONFIG)\obj\base64.obj
	-if exist $(CONFIG)\obj\bignum.obj del /Q $(CONFIG)\obj\bignum.obj
	-if exist $(CONFIG)\obj\camellia.obj del /Q $(CONFIG)\obj\camellia.obj
	-if exist $(CONFIG)\obj\certs.obj del /Q $(CONFIG)\obj\certs.obj
	-if exist $(CONFIG)\obj\debug.obj del /Q $(CONFIG)\obj\debug.obj
	-if exist $(CONFIG)\obj\des.obj del /Q $(CONFIG)\obj\des.obj
	-if exist $(CONFIG)\obj\dhm.obj del /Q $(CONFIG)\obj\dhm.obj
	-if exist $(CONFIG)\obj\havege.obj del /Q $(CONFIG)\obj\havege.obj
	-if exist $(CONFIG)\obj\md2.obj del /Q $(CONFIG)\obj\md2.obj
	-if exist $(CONFIG)\obj\md4.obj del /Q $(CONFIG)\obj\md4.obj
	-if exist $(CONFIG)\obj\md5.obj del /Q $(CONFIG)\obj\md5.obj
	-if exist $(CONFIG)\obj\net.obj del /Q $(CONFIG)\obj\net.obj
	-if exist $(CONFIG)\obj\padlock.obj del /Q $(CONFIG)\obj\padlock.obj
	-if exist $(CONFIG)\obj\rsa.obj del /Q $(CONFIG)\obj\rsa.obj
	-if exist $(CONFIG)\obj\sha1.obj del /Q $(CONFIG)\obj\sha1.obj
	-if exist $(CONFIG)\obj\sha2.obj del /Q $(CONFIG)\obj\sha2.obj
	-if exist $(CONFIG)\obj\sha4.obj del /Q $(CONFIG)\obj\sha4.obj
	-if exist $(CONFIG)\obj\ssl_cli.obj del /Q $(CONFIG)\obj\ssl_cli.obj
	-if exist $(CONFIG)\obj\ssl_srv.obj del /Q $(CONFIG)\obj\ssl_srv.obj
	-if exist $(CONFIG)\obj\ssl_tls.obj del /Q $(CONFIG)\obj\ssl_tls.obj
	-if exist $(CONFIG)\obj\timing.obj del /Q $(CONFIG)\obj\timing.obj
	-if exist $(CONFIG)\obj\x509parse.obj del /Q $(CONFIG)\obj\x509parse.obj
	-if exist $(CONFIG)\obj\xtea.obj del /Q $(CONFIG)\obj\xtea.obj

$(CONFIG)\inc\bit.h: 

$(CONFIG)\obj\removeFiles.obj: \
    ..\bit\macosx-x64-debug\bin\package\windows\removeFiles.c\
    $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) ..\bit\macosx-x64-debug\bin\package\windows\removeFiles.c

$(CONFIG)\bin\removeFiles.exe: \
    $(CONFIG)\obj\removeFiles.obj
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj $(LIBS)

$(CONFIG)\inc\aes.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\aes.h" "\Users\mob\git\est\windows-x86-default\inc\aes.h"

$(CONFIG)\inc\arc4.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\arc4.h" "\Users\mob\git\est\windows-x86-default\inc\arc4.h"

$(CONFIG)\inc\base64.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\base64.h" "\Users\mob\git\est\windows-x86-default\inc\base64.h"

$(CONFIG)\inc\bignum.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\bignum.h" "\Users\mob\git\est\windows-x86-default\inc\bignum.h"

$(CONFIG)\inc\bitos.h: \
    $(CONFIG)\inc\bit.h
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\bitos.h" "\Users\mob\git\est\windows-x86-default\inc\bitos.h"

$(CONFIG)\inc\bn_mul.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\bn_mul.h" "\Users\mob\git\est\windows-x86-default\inc\bn_mul.h"

$(CONFIG)\inc\camellia.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\camellia.h" "\Users\mob\git\est\windows-x86-default\inc\camellia.h"

$(CONFIG)\inc\certs.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\certs.h" "\Users\mob\git\est\windows-x86-default\inc\certs.h"

$(CONFIG)\inc\debug.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\debug.h" "\Users\mob\git\est\windows-x86-default\inc\debug.h"

$(CONFIG)\inc\des.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\des.h" "\Users\mob\git\est\windows-x86-default\inc\des.h"

$(CONFIG)\inc\dhm.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\dhm.h" "\Users\mob\git\est\windows-x86-default\inc\dhm.h"

$(CONFIG)\inc\est.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\est.h" "\Users\mob\git\est\windows-x86-default\inc\est.h"

$(CONFIG)\inc\havege.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\havege.h" "\Users\mob\git\est\windows-x86-default\inc\havege.h"

$(CONFIG)\inc\md2.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\md2.h" "\Users\mob\git\est\windows-x86-default\inc\md2.h"

$(CONFIG)\inc\md4.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\md4.h" "\Users\mob\git\est\windows-x86-default\inc\md4.h"

$(CONFIG)\inc\md5.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\md5.h" "\Users\mob\git\est\windows-x86-default\inc\md5.h"

$(CONFIG)\inc\net.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\net.h" "\Users\mob\git\est\windows-x86-default\inc\net.h"

$(CONFIG)\inc\openssl.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\openssl.h" "\Users\mob\git\est\windows-x86-default\inc\openssl.h"

$(CONFIG)\inc\padlock.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\padlock.h" "\Users\mob\git\est\windows-x86-default\inc\padlock.h"

$(CONFIG)\inc\rsa.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\rsa.h" "\Users\mob\git\est\windows-x86-default\inc\rsa.h"

$(CONFIG)\inc\sha1.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\sha1.h" "\Users\mob\git\est\windows-x86-default\inc\sha1.h"

$(CONFIG)\inc\sha2.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\sha2.h" "\Users\mob\git\est\windows-x86-default\inc\sha2.h"

$(CONFIG)\inc\sha4.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\sha4.h" "\Users\mob\git\est\windows-x86-default\inc\sha4.h"

$(CONFIG)\inc\ssl.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\ssl.h" "\Users\mob\git\est\windows-x86-default\inc\ssl.h"

$(CONFIG)\inc\timing.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\timing.h" "\Users\mob\git\est\windows-x86-default\inc\timing.h"

$(CONFIG)\inc\x509.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\x509.h" "\Users\mob\git\est\windows-x86-default\inc\x509.h"

$(CONFIG)\inc\xtea.h: 
	if not exist "\Users\mob\git\est\windows-x86-default\inc" md "\Users\mob\git\est\windows-x86-default\inc"
	copy /Y "src\xtea.h" "\Users\mob\git\est\windows-x86-default\inc\xtea.h"

$(CONFIG)\obj\aes.obj: \
    src\aes.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\bignum.h \
    $(CONFIG)\inc\net.h \
    $(CONFIG)\inc\dhm.h \
    $(CONFIG)\inc\rsa.h \
    $(CONFIG)\inc\md5.h \
    $(CONFIG)\inc\sha1.h \
    $(CONFIG)\inc\x509.h \
    $(CONFIG)\inc\ssl.h \
    $(CONFIG)\inc\aes.h \
    $(CONFIG)\inc\arc4.h \
    $(CONFIG)\inc\base64.h \
    $(CONFIG)\inc\bn_mul.h \
    $(CONFIG)\inc\camellia.h \
    $(CONFIG)\inc\certs.h \
    $(CONFIG)\inc\debug.h \
    $(CONFIG)\inc\des.h \
    $(CONFIG)\inc\havege.h \
    $(CONFIG)\inc\md2.h \
    $(CONFIG)\inc\md4.h \
    $(CONFIG)\inc\padlock.h \
    $(CONFIG)\inc\sha2.h \
    $(CONFIG)\inc\sha4.h \
    $(CONFIG)\inc\timing.h \
    $(CONFIG)\inc\xtea.h
	"$(CC)" -c -Fo$(CONFIG)\obj\aes.obj -Fd$(CONFIG)\obj\aes.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\aes.c

$(CONFIG)\obj\arc4.obj: \
    src\arc4.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\arc4.obj -Fd$(CONFIG)\obj\arc4.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\arc4.c

$(CONFIG)\obj\base64.obj: \
    src\base64.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\base64.obj -Fd$(CONFIG)\obj\base64.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\base64.c

$(CONFIG)\obj\bignum.obj: \
    src\bignum.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\bignum.obj -Fd$(CONFIG)\obj\bignum.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\bignum.c

$(CONFIG)\obj\camellia.obj: \
    src\camellia.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\camellia.obj -Fd$(CONFIG)\obj\camellia.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\camellia.c

$(CONFIG)\obj\certs.obj: \
    src\certs.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\certs.obj -Fd$(CONFIG)\obj\certs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\certs.c

$(CONFIG)\obj\debug.obj: \
    src\debug.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\debug.obj -Fd$(CONFIG)\obj\debug.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\debug.c

$(CONFIG)\obj\des.obj: \
    src\des.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\des.obj -Fd$(CONFIG)\obj\des.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\des.c

$(CONFIG)\obj\dhm.obj: \
    src\dhm.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\dhm.obj -Fd$(CONFIG)\obj\dhm.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\dhm.c

$(CONFIG)\obj\havege.obj: \
    src\havege.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\havege.obj -Fd$(CONFIG)\obj\havege.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\havege.c

$(CONFIG)\obj\md2.obj: \
    src\md2.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\md2.obj -Fd$(CONFIG)\obj\md2.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\md2.c

$(CONFIG)\obj\md4.obj: \
    src\md4.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\md4.obj -Fd$(CONFIG)\obj\md4.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\md4.c

$(CONFIG)\obj\md5.obj: \
    src\md5.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\md5.obj -Fd$(CONFIG)\obj\md5.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\md5.c

$(CONFIG)\obj\net.obj: \
    src\net.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\net.obj -Fd$(CONFIG)\obj\net.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\net.c

$(CONFIG)\obj\padlock.obj: \
    src\padlock.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\padlock.obj -Fd$(CONFIG)\obj\padlock.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\padlock.c

$(CONFIG)\obj\rsa.obj: \
    src\rsa.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\rsa.obj -Fd$(CONFIG)\obj\rsa.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\rsa.c

$(CONFIG)\obj\sha1.obj: \
    src\sha1.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sha1.obj -Fd$(CONFIG)\obj\sha1.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sha1.c

$(CONFIG)\obj\sha2.obj: \
    src\sha2.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sha2.obj -Fd$(CONFIG)\obj\sha2.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sha2.c

$(CONFIG)\obj\sha4.obj: \
    src\sha4.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sha4.obj -Fd$(CONFIG)\obj\sha4.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\sha4.c

$(CONFIG)\obj\ssl_cli.obj: \
    src\ssl_cli.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ssl_cli.obj -Fd$(CONFIG)\obj\ssl_cli.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\ssl_cli.c

$(CONFIG)\obj\ssl_srv.obj: \
    src\ssl_srv.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ssl_srv.obj -Fd$(CONFIG)\obj\ssl_srv.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\ssl_srv.c

$(CONFIG)\obj\ssl_tls.obj: \
    src\ssl_tls.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ssl_tls.obj -Fd$(CONFIG)\obj\ssl_tls.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\ssl_tls.c

$(CONFIG)\obj\timing.obj: \
    src\timing.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\timing.obj -Fd$(CONFIG)\obj\timing.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\timing.c

$(CONFIG)\obj\x509parse.obj: \
    src\x509parse.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\x509parse.obj -Fd$(CONFIG)\obj\x509parse.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\x509parse.c

$(CONFIG)\obj\xtea.obj: \
    src\xtea.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\xtea.obj -Fd$(CONFIG)\obj\xtea.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\xtea.c

$(CONFIG)\bin\libest.dll: \
    $(CONFIG)\inc\aes.h \
    $(CONFIG)\inc\arc4.h \
    $(CONFIG)\inc\base64.h \
    $(CONFIG)\inc\bignum.h \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\bn_mul.h \
    $(CONFIG)\inc\camellia.h \
    $(CONFIG)\inc\certs.h \
    $(CONFIG)\inc\debug.h \
    $(CONFIG)\inc\des.h \
    $(CONFIG)\inc\dhm.h \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\inc\havege.h \
    $(CONFIG)\inc\md2.h \
    $(CONFIG)\inc\md4.h \
    $(CONFIG)\inc\md5.h \
    $(CONFIG)\inc\net.h \
    $(CONFIG)\inc\openssl.h \
    $(CONFIG)\inc\padlock.h \
    $(CONFIG)\inc\rsa.h \
    $(CONFIG)\inc\sha1.h \
    $(CONFIG)\inc\sha2.h \
    $(CONFIG)\inc\sha4.h \
    $(CONFIG)\inc\ssl.h \
    $(CONFIG)\inc\timing.h \
    $(CONFIG)\inc\x509.h \
    $(CONFIG)\inc\xtea.h \
    $(CONFIG)\obj\aes.obj \
    $(CONFIG)\obj\arc4.obj \
    $(CONFIG)\obj\base64.obj \
    $(CONFIG)\obj\bignum.obj \
    $(CONFIG)\obj\camellia.obj \
    $(CONFIG)\obj\certs.obj \
    $(CONFIG)\obj\debug.obj \
    $(CONFIG)\obj\des.obj \
    $(CONFIG)\obj\dhm.obj \
    $(CONFIG)\obj\havege.obj \
    $(CONFIG)\obj\md2.obj \
    $(CONFIG)\obj\md4.obj \
    $(CONFIG)\obj\md5.obj \
    $(CONFIG)\obj\net.obj \
    $(CONFIG)\obj\padlock.obj \
    $(CONFIG)\obj\rsa.obj \
    $(CONFIG)\obj\sha1.obj \
    $(CONFIG)\obj\sha2.obj \
    $(CONFIG)\obj\sha4.obj \
    $(CONFIG)\obj\ssl_cli.obj \
    $(CONFIG)\obj\ssl_srv.obj \
    $(CONFIG)\obj\ssl_tls.obj \
    $(CONFIG)\obj\timing.obj \
    $(CONFIG)\obj\x509parse.obj \
    $(CONFIG)\obj\xtea.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\aes.obj $(CONFIG)\obj\arc4.obj $(CONFIG)\obj\base64.obj $(CONFIG)\obj\bignum.obj $(CONFIG)\obj\camellia.obj $(CONFIG)\obj\certs.obj $(CONFIG)\obj\debug.obj $(CONFIG)\obj\des.obj $(CONFIG)\obj\dhm.obj $(CONFIG)\obj\havege.obj $(CONFIG)\obj\md2.obj $(CONFIG)\obj\md4.obj $(CONFIG)\obj\md5.obj $(CONFIG)\obj\net.obj $(CONFIG)\obj\padlock.obj $(CONFIG)\obj\rsa.obj $(CONFIG)\obj\sha1.obj $(CONFIG)\obj\sha2.obj $(CONFIG)\obj\sha4.obj $(CONFIG)\obj\ssl_cli.obj $(CONFIG)\obj\ssl_srv.obj $(CONFIG)\obj\ssl_tls.obj $(CONFIG)\obj\timing.obj $(CONFIG)\obj\x509parse.obj $(CONFIG)\obj\xtea.obj $(LIBS)

version: 
	@echo 0.6.0-0

stop: 


installBinary: stop


start: 


install: stop installBinary start


uninstall: stop


